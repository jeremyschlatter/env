[user]
    name = Jeremy Schlatter
    email = jeremy@jeremyschlatter.com
    signingkey = 4D081B793DF81368

[commit]
    gpgsign = true

[alias]
    co = checkout
    st = status
    br = branch
    c = commit

    # Recover from an error after editing the commit message but before completing the commit.
    #
    # Sometimes I write a long commit message in my editor, save and quit, and then discover that
    # the commit failed for some reason. (Typically because it tried to sign the commit with my
    # private key, but it could not read my private key.)
    #
    # I don't want to lose the long commit message when that happens. Fortunately, it's still there
    # in .git/COMMIT_EDITMSG, and I can pull it back up in my editor with this alias.
    #
    # Credit to https://stackoverflow.com/a/52976498/3072514 and https://stackoverflow.com/a/57950650/3072514
    fix-commit = !git commit --edit --file "$(git rev-parse --git-dir)/COMMIT_EDITMSG"

    # Make a time-wasting thing that happens repeatedly in normal git workflows
    # waste slightly less time.
    #
    # I'm annoyed that this is apparently the best I can do short of monkey-patching
    # git-pull. Credit to both of these locations for this snippet:
    #     https://zarino.co.uk/post/git-set-upstream/
    #     https://stackoverflow.com/a/35487209
    set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`

    # From https://victorzhou.com/blog/git-aliases/
    d = diff

[push]
    default = current

[pull]
    ff = only

[core]
    pager = delta
    fsmonitor = true
    untrackedcache = true

[init]
    defaultBranch = master

[rerere]
    enabled = true

[hub]
    protocol = ssh
